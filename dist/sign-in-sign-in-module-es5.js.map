{"version":3,"sources":["src/app/sign-in/new-password/new-password.component.html","src/app/sign-in/password-recovery/password-recovery.component.html","src/app/sign-in/sign-in/sign-in.component.html","src/app/sign-in/new-password/new-password.component.scss","src/app/sign-in/new-password/new-password.component.ts","src/app/sign-in/password-recovery/password-recovery.component.scss","src/app/sign-in/password-recovery/password-recovery.component.ts","src/app/sign-in/sign-in.module.ts","src/app/sign-in/sign-in/sign-in.component.scss","src/app/sign-in/sign-in/sign-in.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div *ngIf=\\\"showModule\\\" appUnload>\\n    <div fxFlex=\\\"400px\\\" class=\\\"login-module\\\" *ngIf=\\\"isNewPassword\\\">\\n        <h3 class=\\\"pb-1\\\">{{newPasswordJson.newPassword.heading}}</h3>\\n        <p class=\\\"pb-2\\\">{{newPasswordJson.newPassword.subHeading}}</p>\\n        <!-- start form -->\\n        <div class=\\\"form-group ptb-3\\\">\\n            <div class=\\\"relative\\\">\\n\\n                <app-password-strength [passwordRule]=\\\"_pRule\\\" (validatedPassword)=\\\"validatedPassword($event)\\\">\\n                </app-password-strength>\\n\\n            </div>\\n        </div>\\n        <div class=\\\"btn-bx\\\">\\n            <button mat-button class=\\\"btn-primary\\\" [disabled]=\\\"!passwordObj.passworCheck\\\"\\n                (click)=\\\"submit()\\\">Next</button>\\n        </div>\\n        <!-- end form -->\\n    </div>\\n    <div fxFlex=\\\"400px\\\" class=\\\"login-module\\\" *ngIf=\\\"!isNewPassword\\\">\\n        <div class=\\\"ptb-8\\\">\\n            <h3 class=\\\"pb-1\\\">{{newPasswordJson.passwordChanged.heading}}</h3>\\n            <p class=\\\"pb-2\\\">{{newPasswordJson.passwordChanged.subHeading}}</p>\\n        </div>\\n        <!-- start form -->\\n        <div class=\\\"btn-bx\\\">\\n            <button mat-button class=\\\"btn-primary\\\" (click)=\\\"login()\\\">Login</button>\\n        </div>\\n        <!-- end form -->\\n    </div>\\n\\n</div>\"","export default \"<div fxFlex=\\\"400px\\\" class=\\\"login-module\\\" *ngIf=\\\"showModule\\\" appUnload>\\n    <h3 class=\\\"pb-1\\\">{{passwordRecoveryJson.passwordRecovery.heading}}</h3>\\n    <p class=\\\"pb-2\\\">{{passwordRecoveryJson.passwordRecovery.subHeading}}\\n        <span class=\\\"d-block\\\"><strong>{{emailId}} </strong><a (click)=\\\"notYou()\\\">Not you?</a></span>\\n    </p>\\n    <!-- start form -->\\n    <form>\\n        <div class=\\\"form-group ptb-4\\\">\\n            <mat-label>{{passwordRecoveryJson.formFields.otp.label}}</mat-label>\\n            <div class=\\\"ptb-1\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                <ng-otp-input #ngOtpInput (onInputChange)=\\\"onOtpChange($event)\\\" *ngIf=\\\"showOtpComponent\\\"\\n                    [config]=\\\"config\\\" class=\\\"otp\\\">\\n                </ng-otp-input>\\n                <div fxLayoutAlign=\\\"end center\\\">\\n                    <a (click)=\\\"reSendOtp()\\\" [ngClass]=\\\"otpTime != 1 ? 'disabled' :''\\\" matSuffix>Resend\\n                        <span *ngIf=\\\"otpTime != 1\\\">({{otpTime}})</span>\\n                    </a>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"btn-bx\\\">\\n            <button mat-button class=\\\"btn-primary\\\"\\n                [disabled]=\\\"otp.length < passwordRecoveryJson.formFields.otp.otpLength\\\"\\n                (click)=\\\"submit()\\\">Confirm</button>\\n        </div>\\n    </form>\\n    <!-- end form -->\\n</div>\"","export default \"<p (click)=\\\"click()\\\"> click</p>\\n\\n<div *ngIf=\\\"showModule\\\">\\n  <div fxFlex=\\\"400px\\\" class=\\\"login-module\\\">\\n    <div *ngIf=\\\"!hidePassword;else signin\\\">\\n      <h3 class=\\\"pb-1\\\">{{singInJson.signUp.heading}} </h3>\\n\\n      <p *ngIf=\\\"!isRegistered;else registerSubHeading\\\">{{singInJson.signUp.loginSubHeading}} </p>\\n      <ng-template #registerSubHeading>\\n        <p>{{singInJson.signUp.registerSubHeading}}</p>\\n      </ng-template>\\n    </div>\\n    <ng-template #signin>\\n      <h3 class=\\\"pb-1\\\">{{singInJson.signIn.heading}} </h3>\\n      <p>{{singInJson.signIn.subHeading}} </p>\\n    </ng-template>\\n    <!-- start form -->\\n    <form [formGroup]=\\\"signInForm\\\">\\n      <div class=\\\"form-group min-height ptb-7\\\">\\n\\n        <mat-form-field appearance=\\\"legacy\\\">\\n          <input [type]=\\\"singInJson.formFields.email.type\\\" matInput [placeholder]=\\\"singInJson.formFields.email.label\\\"\\n            formControlName=\\\"email\\\" (keyup)=\\\"onKeydown($event)\\\" appFocus>\\n          <mat-error\\n            *ngIf=\\\"(signInForm.controls['email'].touched) && (signInForm.controls['email'].hasError('required'))\\\">\\n            {{singInJson.formFields.email.messages.required}}</mat-error>\\n\\n          <span *ngIf=\\\"signInForm.controls['email'].dirty\\\">\\n            <mat-error class=\\\"input-error\\\"\\n              *ngIf=\\\"(signInForm.controls['email'].errors && signInForm.controls['email'].hasError('patternError'))\\\">\\n              {{singInJson.formFields.email.messages.regex}}\\n            </mat-error>\\n          </span>\\n\\n          <mat-icon matSuffix *ngIf=\\\"isRegistered\\\">\\n            <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"26\\\" height=\\\"26\\\" viewBox=\\\"0 0 26 26\\\">\\n              <g fill=\\\"none\\\" fill-rule=\\\"nonzero\\\">\\n                <circle cx=\\\"13\\\" cy=\\\"13\\\" r=\\\"13\\\" fill=\\\"#FFD93B\\\" />\\n                <path fill=\\\"#3E4347\\\"\\n                  d=\\\"M12.768 21.357a8.362 8.362 0 0 1-8.108-6.285.544.544 0 1 1 1.056-.27 7.272 7.272 0 0 0 7.051 5.468 7.272 7.272 0 0 0 7.052-5.467.543.543 0 0 1 .663-.393c.292.075.468.37.394.662a8.36 8.36 0 0 1-8.108 6.285z\\\" />\\n                <path fill=\\\"#F4C534\\\"\\n                  d=\\\"M26 12.947C26 20.159 20.155 26 12.947 26a13.027 13.027 0 0 1-10.161-4.858 12.984 12.984 0 0 0 8.195 2.892c7.207 0 13.053-5.841 13.053-13.053 0-3.105-1.081-5.956-2.892-8.195A13.04 13.04 0 0 1 26 12.946z\\\" />\\n                <ellipse cx=\\\"8.589\\\" cy=\\\"10.321\\\" fill=\\\"#3E4347\\\" rx=\\\"2.089\\\" ry=\\\"2.321\\\" />\\n                <ellipse cx=\\\"17.411\\\" cy=\\\"10.321\\\" fill=\\\"#3E4347\\\" rx=\\\"2.089\\\" ry=\\\"2.321\\\" />\\n              </g>\\n            </svg>\\n          </mat-icon>\\n          <mat-icon matSuffix *ngIf=\\\"isEmailValid\\\"></mat-icon>\\n          <mat-icon matSuffix\\n            *ngIf=\\\"(signInForm.controls['email'].dirty) && !isRegistered && !isEmailValid &&\\n            !(signInForm.controls['email'].hasError('required')) && !(signInForm.controls['email'].hasError('patternError'))\\\">\\n            <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n              <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\n              <path\\n                d=\\\"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\\\" />\\n            </svg>\\n          </mat-icon>\\n\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"legacy\\\" *ngIf=\\\"hidePassword\\\">\\n          <input [type]=\\\"singInJson.formFields.password.type\\\" matInput\\n            [placeholder]=\\\"singInJson.formFields.password.label\\\" formControlName=\\\"password\\\">\\n          <mat-error\\n            *ngIf=\\\"(signInForm.controls['password'].touched) && (signInForm.controls['password'].hasError('required'))\\\">\\n            {{singInJson.formFields.password.messages.required}}</mat-error>\\n          <a matSuffix (click)=\\\"forgotPassword()\\\">Forgot Password?</a>\\n        </mat-form-field>\\n        <p class=\\\"error-message ptb-1\\\" *ngIf=\\\"isRegistered && !redirectOTP && !hidePassword\\\">Oops! looks like you are\\n          not yet\\n          <strong>registered</strong>\\n          with us.\\n          <span class=\\\"d-block\\\">Click on\\n            <strong>Next</strong> to proceed further.\\n          </span>\\n        </p>\\n        <p class=\\\"error-message ptb-1\\\" *ngIf=\\\"isRegistered && !hidePassword && redirectOTP\\\">Oops! looks like you are not\\n          yet <strong>verified</strong>\\n          with us.\\n          <span class=\\\"d-block\\\">Click on\\n            <strong>Next</strong> to proceed further.\\n          </span>\\n        </p>\\n      </div>\\n\\n      <div *ngIf=\\\"captcha.showCaptcha\\\">\\n        {{captcha.stringCaptcha}} =\\n        <input type=\\\"text\\\" maxlength=\\\"2\\\" formControlName=\\\"sum\\\" numbersOnly>\\n      </div>\\n      <div class=\\\"btn-bx\\\">\\n        <button mat-button class=\\\"btn-primary\\\" *ngIf=\\\"hidePassword && !captcha.showCaptcha\\\"\\n          [disabled]=\\\"signInForm.invalid\\\" (click)=\\\"submit()\\\">Login</button>\\n\\n        <button mat-button class=\\\"btn-primary\\\" *ngIf=\\\"hidePassword && captcha.showCaptcha\\\"\\n          [disabled]=\\\"signInForm.invalid\\\" (click)=\\\"validateCaptcha()\\\">Login</button>\\n        <button mat-button class=\\\"btn-primary\\\" *ngIf=\\\"!hidePassword\\\" [disabled]=\\\"!isRegistered\\\"\\n          (click)=\\\"openSignUp()\\\">Next</button>\\n      </div>\\n\\n\\n\\n\\n    </form>\\n    <!-- end form -->\\n\\n\\n  </div>\\n</div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ24taW4vbmV3LXBhc3N3b3JkL25ldy1wYXNzd29yZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, HostListener } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AppLoaderService } from '../../core/components/app-loader/app-loader.service';\nimport { SignInService } from '../sign-in.service';\nimport { Router } from '@angular/router';\nimport { _PRule } from '../../password-strength/interface/password-rule';\nimport { MassageMasterService } from '../../massage-master.service';\n\n@Component({\n  selector: 'app-new-password',\n  templateUrl: './new-password.component.html',\n  styleUrls: ['./new-password.component.scss']\n})\nexport class NewPasswordComponent implements OnInit {\n\n  public _pRule: _PRule = {\n    at_least_x_chars: 8,\n    at_max_x_chars: 30,\n    at_least_one_lower_case_char: true,\n    at_least_one_upper_case_char: false,\n    at_least_one_digit_char: true,\n    at_least_one_special_char: true\n  };\n  public newPasswordForm: FormGroup;\n  public passwordObj: any = {\n    passworCheck: false,\n    password: ''\n  };\n  public showModule: boolean = false;\n  public newPasswordJson: any = {};\n  public passwordChangedJson: any = {};\n  public isNewPassword: boolean = true;\n  public emailId: string = '';\n\n  constructor(private appLoaderService: AppLoaderService,\n    private signInService: SignInService,\n    private _router: Router, private massageMasterService: MassageMasterService,\n    private _fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.signInService.currentId.subscribe(id => {\n      this.appLoaderService.hideLoader();\n      if (id !== null) {\n        this.emailId = id;\n        this.getNewPasswordRecovery();\n      } else {\n        this._router.navigate(['authentication/signIn']);\n      }\n    });\n  }\n\n  private getNewPasswordRecovery(): void {\n    this.newPasswordJson = this.massageMasterService.getMessageJsonData();\n    this.showModule = true;\n    this.newPasswordForm = this._fb.group({\n      password: ['', Validators.required],\n      email: [this.emailId]\n    });\n  }\n\n  public validatedPassword(password: object): void {\n    console.log(password);\n    this.passwordObj = password;\n    if (password['passworCheck']) {\n      this.newPasswordForm.controls.password.setValue(\n        this.passwordObj.password);\n    }\n  }\n\n  public submit(): void {\n    this.isNewPassword = false;\n    const obj = {\n      emailId: this.newPasswordForm.value.email,\n      password: this.newPasswordForm.value.password\n    };\n\n    this.signInService.newPasswordApi(obj).subscribe(result => {\n      console.log('result', result);\n      this.appLoaderService.hideLoader();\n      const data = result['data'];\n      if (data.status.toLowerCase() === 'success') {\n      } else {\n        this.massageMasterService.showError(this.massageMasterService.getErrors().default);\n      }\n    }, (err) => {\n      console.log('error', err);\n      this.appLoaderService.hideLoader();\n      const errorObj = JSON.parse(err.completeError.response);\n      const msg = errorObj.message ? errorObj.message : this.massageMasterService.getErrors().default;\n      this.massageMasterService.showError(msg)\n    });\n  }\n\n  public login(): void {\n    this._router.navigate(['authentication/signIn']);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ24taW4vcGFzc3dvcmQtcmVjb3ZlcnkvcGFzc3dvcmQtcmVjb3ZlcnkuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppLoaderService } from '../../core/components/app-loader/app-loader.service';\nimport { SignInService } from '../sign-in.service';\nimport { MassageMasterService } from '../../massage-master.service';\nimport { SignUpService } from 'src/app/sign-up/sign-up.service';\n\n@Component({\n  selector: 'app-password-recovery',\n  templateUrl: './password-recovery.component.html',\n  styleUrls: ['./password-recovery.component.scss']\n})\nexport class PasswordRecoveryComponent implements OnInit {\n  public showModule: boolean = false;\n  public passwordRecoveryJson: any = {};\n  public emailId: string = '';\n  public otpClass: Array<string> = [];\n  public otpTime: any = '01:00';\n  public seconds = 59;\n  public reference: any;\n\n  otp: string = '';\n  showOtpComponent = true;\n\n  @ViewChild('ngOtpInput', { static: true }) ngOtpInput: any;\n  config = {\n    allowNumbersOnly: true,\n    length: 5,\n    isPasswordInput: false,\n    disableAutoFocus: false,\n    placeholder: '',\n    inputStyles: {\n      'width': '40px',\n      'height': '40px'\n    }\n  };\n\n  constructor(private appLoaderService: AppLoaderService,\n    private signInService: SignInService,\n    private massageMasterService: MassageMasterService,\n    private _router: Router,\n    private signUpService: SignUpService\n  ) { }\n\n  public onOtpChange(otp): void {\n    this.otp = otp;\n  }\n\n  ngOnInit() {\n    this.signInService.currentId.subscribe(id => {\n      this.appLoaderService.hideLoader();\n      if (id !== null) {\n        this.emailId = id;\n        this.getPasswordRecovery();\n      } else {\n        this._router.navigate(['authentication/signIn']);\n      }\n    });\n\n    this.signInService.currentReference.subscribe(reference => {\n      this.appLoaderService.hideLoader();\n      if (reference) {\n        this.reference = reference;\n      }\n    })\n  }\n\n  private getPasswordRecovery(): void {\n    this.passwordRecoveryJson = this.massageMasterService.getMessageJsonData();\n    this.config.length = this.passwordRecoveryJson.formFields.otp.otpLength;\n    this.showModule = true;\n    this.countDown();\n  }\n\n  private countDown(): void {\n    setInterval(() => {\n      if (this.seconds == 0) {\n        return;\n      }\n      this.otpTime = this.seconds--;\n    }, 1000);\n  }\n\n  public submit(): void {\n    const obj = {\n      otp: this.otp,\n      emailId: this.emailId,\n      reference: this.reference\n    };\n    this.signUpService.confirmEmailApi(obj).subscribe(result => {\n      console.log('result', result);\n      this.appLoaderService.hideLoader();\n      const data = result['data'];\n      if (data.status.toLowerCase() === 'success') {\n        this._router.navigate(['authentication/signIn/new-password']);\n      } else {\n        this.massageMasterService.showError(this.massageMasterService.getErrors().default);\n      }\n    }, (err) => {\n      console.log('error', err);\n      this.appLoaderService.hideLoader();\n      const errorObj = JSON.parse(err.completeError.response);\n      const msg = errorObj.message ? errorObj.message : this.massageMasterService.getErrors().default;\n      this.massageMasterService.showError(msg);\n    });\n\n  }\n\n  public notYou(): void {\n    this._router.navigate(['authentication/signIn']);\n  }\n\n  public reSendOtp(): void {\n    this.appLoaderService.showLoader();\n    this.showOtpComponent = false;\n    this.otp = '';\n    setTimeout(() => {\n      this.showOtpComponent = true;\n    }, 0);\n    this.signInService.generateOtp(this.emailId,'forgetpassword').subscribe(result => {\n      this.appLoaderService.hideLoader();\n      const data = result['data'];\n      if (data.status.toLowerCase() === 'success') {\n        console.log(data.response.response);\n        this.reference = data.response.response.reference;\n      } else {\n        this.massageMasterService.showError(this.massageMasterService.getErrors().default);\n      }\n    }, (err) => {\n      console.log('error', err);\n      this.appLoaderService.hideLoader();\n      const errorObj = JSON.parse(err.completeError.response);\n      const msg = errorObj.message ? errorObj.message : this.massageMasterService.getErrors().default;\n      this.massageMasterService.showError(msg)\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material/material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { PasswordRecoveryComponent } from './password-recovery/password-recovery.component';\nimport { NewPasswordComponent } from './new-password/new-password.component';\nimport { PasswordStrengthModule } from '../password-strength/password-strength.module';\nimport { CoreModule } from '../core/core.module';\nimport { NgOtpInputModule } from 'ng-otp-input';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      { path: '', redirectTo: 'sign-in', pathMatch: 'full' },\n      { path: 'sign-in', component: SignInComponent },\n      { path: 'password-recovery', component: PasswordRecoveryComponent },\n      { path: 'new-password', component: NewPasswordComponent },\n    ]\n  }\n];\n\n\n@NgModule({\n  declarations: [SignInComponent, PasswordRecoveryComponent, NewPasswordComponent],\n  imports: [\n    CommonModule,NgOtpInputModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    FormsModule, PasswordStrengthModule,\n    FlexLayoutModule, CoreModule,\n    RouterModule.forChild(routes),\n  ],\n})\n\nexport class SignInModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ24taW4vc2lnbi1pbi9zaWduLWluLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, HostListener } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { AppLoaderService } from '../../core/components/app-loader/app-loader.service';\nimport { SignInService } from '../sign-in.service';\nimport { MassageMasterService } from '../../massage-master.service';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss']\n})\nexport class SignInComponent implements OnInit {\n  public singInJson: any = {};\n  public signUpJson: any = {}\n  public signInForm: FormGroup;\n  public hidePassword: boolean = false;\n  public passwordObj: any = {};\n  public showModule: boolean = false;\n  public isRegistered: boolean = false;\n  public isEmailValid: boolean = false;\n  public redirectOTP: boolean = false;\n  public isValidateApi = {\n    id: null,\n    data: []\n  };\n  public captcha = {\n    stringCaptcha: \"\",\n    sumCaptcha: 0,\n    showCaptcha: false\n  }\n  public countIncorrectPassword: number = 0;\n  public reference: any;\n  cookie: any;\n\n  constructor(\n    private _router: Router,\n    private _fb: FormBuilder,\n    private signInService: SignInService,\n    private appLoaderService: AppLoaderService,\n    private massageMasterService: MassageMasterService\n  ) { }\n\n\n  getCookies(name) {\n    var match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));\n    if (match) return match[2];\n  }\n\n  click() {\n    this.setCookie();\n    this.cookie = this.getCookies('test');\n    console.log(this.cookie);\n\n    setTimeout(() => {\n      // this.removeCookie();\n      window.open(\"/authentication/signIn?\" + this.cookie, \"_blank\")\n    }, 1000);\n  }\n\n  removeCookie() {\n    let res = document.cookie;\n    let multiple = res.split(\";\");\n    for (let i = 0; i < multiple.length; i++) {\n      let key = multiple[i].split(\"=\");\n      document.cookie = key[0] + \" =; expires = Thu, 01 Jan 1970 00:00:00 UTC\";\n    }\n  }\n\n  setCookie() {\n    document.cookie = \"test=\" + \"test123\";\n  }\n\n\n\n  returnStringCaptcha(): string {\n    let firstNumber = Math.floor(Math.random() * Math.floor(10));\n    let secondNumber = Math.floor(Math.random() * Math.floor(10));\n    this.captcha.sumCaptcha = firstNumber + secondNumber;\n\n    return `${firstNumber} + ${secondNumber}`\n  }\n\n  validateCaptcha(): void {\n    if ((parseInt(this.signInForm.value.sum)) === this.captcha.sumCaptcha) {\n      this.captcha.showCaptcha = false;\n      this.captcha.stringCaptcha = this.returnStringCaptcha();\n      this.signInForm.patchValue({ sum: '' });\n      this.submit();\n    }\n    else {\n      this.massageMasterService.showError('Invalid Captcha');\n      this.captcha.stringCaptcha = this.returnStringCaptcha();\n      this.signInForm.patchValue({ sum: '' })\n    }\n  }\n\n  ngOnInit() {\n    this.signInService.changeReference(null);\n    this.signInForm = this._fb.group({\n      email: ['', Validators.required],\n      password: [''],\n      sum: ['']\n    });\n    this.singInJson = this.massageMasterService.getMessageJsonData();\n    this.onChangesEmailValidation();\n    this.showModule = true;\n\n    this.signInService.currentId.subscribe(id => {\n      this.appLoaderService.hideLoader();\n      if (id !== null) {\n        this.signInForm.controls['email'].setValue(id);\n      } else {\n        // this.signInService.changeEmailId(null);\n      }\n    });\n\n    this.captcha.stringCaptcha = this.returnStringCaptcha();\n  }\n\n  private onChangesEmailValidation(): void {\n    this.signInForm\n      .get('email')\n      .valueChanges.pipe(\n        debounceTime(500),\n        distinctUntilChanged()\n      )\n      .subscribe(val => {\n        // debugger\n        if (new RegExp(this.singInJson.formFields.email.regex).test(val)) {\n          if (this.isValidateApi.id === null || this.isValidateApi.id !== this.splitString(val)) {\n            this.isValidateApi.id = this.splitString(val);\n            this.validateAPICall('full', this.signInForm.value.email);\n          } else {\n            this.setFields('full');\n          }\n        } else if (!new RegExp(this.singInJson.formFields.email.regex).test(val)) {\n          this.resetFlags();\n          this.signInForm.controls['email'].setErrors({ patternError: true });\n        } else {\n          console.log('else');\n        }\n      });\n  }\n\n  private findString(str: string) {\n    return str.includes('@');\n  }\n\n  private splitString(str: string) {\n    return (str.split('@'))[0];\n  }\n\n  private resetFlags(): void {\n    this.redirectOTP = false;\n    this.hidePassword = false;\n    this.isEmailValid = false;\n    this.isRegistered = false;\n  }\n\n  private setFields(type: string): void {\n    this.resetFlags();\n    const item = this.isValidateApi.data.find(item => item.emailId === (this.signInForm.value['email']));\n    console.log('item', item);\n    if (item && !item.verified) {\n      this.redirectOTP = true;\n      this.isRegistered = true;\n\n    } else if (item && item.verified) {\n      this.isEmailValid = true;\n      this.hidePassword = true;\n      this.signInForm.controls['password'].setValidators(Validators.required);\n      this.signInForm.controls['password'].updateValueAndValidity();\n    } else {\n      if (type != 'Partial') {\n        this.isRegistered = true;\n        this.signInForm.controls['password'].setValue('');\n        this.signInForm.controls['password'].updateValueAndValidity();\n      }\n    }\n  }\n\n  private generateOtp(email: string, type?: string): void {\n    this.appLoaderService.showLoader();\n\n    this.signInService.generateOtp(email, type).subscribe(result => {\n      this.appLoaderService.hideLoader();\n      const data = result['data'];\n      if (data.status.toLowerCase() === 'success') {\n        console.log(data.response.response);\n        this.reference = data.response.response.reference;\n        this.redirectOTP = true;\n        this.isRegistered = true;\n        this.signInForm.controls['password'].setValue('');\n        this.signInForm.controls['password'].updateValueAndValidity();\n        if (type === \"signup\") {\n          this.signInService.changeEmailId(this.signInForm.value.email);\n          this.signInService.changeReference(this.reference);\n          this._router.navigate(['/authentication/signUp/confirm-email']);\n        }\n        console.log(this.reference);\n        if (type === 'forgetpassword') {\n          this.signInService.changeEmailId(this.signInForm.value.email);\n          this.signInService.changeReference(this.reference);\n          this._router.navigate(['/authentication/signIn/password-recovery']);\n        }\n      } else {\n        this.massageMasterService.showError(this.massageMasterService.getErrors().default);\n      }\n    }, (err) => {\n      console.log('error', err);\n      this.appLoaderService.hideLoader();\n      const errorObj = JSON.parse(err.completeError.response);\n      const msg = errorObj.message ? errorObj.message : this.massageMasterService.getErrors().default;\n      this.massageMasterService.showError(msg)\n    });\n  }\n\n  onKeydown(event: any): void {\n    if (event.keyCode === 50 && this.findString(this.signInForm.value.email)) {\n      let id = this.splitString(this.signInForm.value.email);\n      if (id === this.isValidateApi.id) {\n        this.setFields('Partial')\n      } else if (id != this.isValidateApi.id) {\n        this.isValidateApi.id = id;\n        this.validateAPICall('Partial', id);\n      }\n    }\n  }\n\n  private validateAPICall(type: string, id: string): void {\n    if (type !== 'Partial') {\n      this.appLoaderService.showLoader();\n    }\n    this.signInService.verifyEmailId(type, id).subscribe(result => {\n      this.appLoaderService.hideLoader();\n      const data = result['data'];\n      console.log('validateAPICall', data);\n      if (data.status.toLowerCase() === 'success') {\n        console.log(data.response.response);\n        this.isValidateApi.data = data.response.response;\n        this.setFields(type);\n      } else {\n        this.massageMasterService.showError(this.massageMasterService.getErrors().default);\n        this.isValidateApi.data = [];\n        this.setFields(type);\n      }\n    }, (err) => {\n      console.log('error', err);\n      this.isValidateApi.data = [];\n      this.setFields(type);\n      this.appLoaderService.hideLoader();\n      const errorObj = JSON.parse(err.completeError.response);\n      const msg = errorObj.message ? errorObj.message : this.massageMasterService.getErrors().default;\n      if (msg !== 'User not registered') {\n        this.massageMasterService.showError(msg);\n      }\n    });\n  }\n\n  public openSignUp(): void {\n    this.signInService.changeEmailId(this.signInForm.value.email);\n    this.signInService.changeReference(this.reference);\n    if (this.redirectOTP) {\n      this.generateOtp(this.signInForm.value.email, 'signup');\n\n    }\n    else\n      this._router.navigate(['/authentication/signUp/sign-up']);\n  }\n\n  public forgotPassword(): void {\n    this.generateOtp(this.signInForm.value.email, 'forgetpassword')\n  }\n\n  public submit(): void {\n    this.appLoaderService.showLoader();\n    this.signInService.signInApi(this.signInForm.getRawValue()).subscribe(result => {\n      this.countIncorrectPassword = 0;\n      this.signInForm.controls['sum'].clearValidators();\n      this.signInForm.controls['sum'].updateValueAndValidity();\n      this.appLoaderService.hideLoader();\n      const data = result['data'];\n      if (data.status.toLowerCase() === 'success') {\n        console.log(data.response.response);\n        alert('Congratulations');\n      } else {\n        this.massageMasterService.showError(this.massageMasterService.getErrors().default);\n      }\n    }, (err) => {\n      console.log('error', err);\n      this.countIncorrectPassword++;\n      if (this.countIncorrectPassword >= 2) {\n        this.captcha.showCaptcha = true;\n        this.signInForm.controls['sum'].setValidators(Validators.required);\n        this.signInForm.controls['sum'].updateValueAndValidity();\n      }\n\n      this.appLoaderService.hideLoader();\n      const errorObj = JSON.parse(err.completeError.response);\n      const msg = errorObj.message ? errorObj.message : this.massageMasterService.getErrors().default;\n      this.massageMasterService.showError(msg)\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}
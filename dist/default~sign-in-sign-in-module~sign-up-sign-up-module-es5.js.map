{"version":3,"sources":["node_modules/ng-otp-input/fesm2015/ng-otp-input.js","src/app/core/core.module.ts","src/app/core/directive/focus.directive.ts","src/app/core/directive/numbers-only.directive.ts","src/app/core/directive/unload.directive.ts","src/app/core/pipe/filter.pipe.ts","src/app/gateway-apis.service.ts","src/app/gateway.service.ts","src/app/sign-in/sign-in.service.ts","src/app/sign-up/sign-up.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { FormGroup, FormControl, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Pipe, Component, Input, Output, EventEmitter, Directive, ElementRef, Renderer2, NgModule } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass KeysPipe {\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    transform(value) {\r\n        return Object.keys(value);\r\n    }\r\n}\r\nKeysPipe.decorators = [\r\n    { type: Pipe, args: [{\r\n                name: 'keys'\r\n            },] }\r\n];\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputComponent {\r\n    /**\r\n     * @param {?} keysPipe\r\n     */\r\n    constructor(keysPipe) {\r\n        this.keysPipe = keysPipe;\r\n        this.config = { length: 4 };\r\n        // tslint:disable-next-line: no-output-on-prefix\r\n        this.onInputChange = new EventEmitter();\r\n        this.inputControls = new Array(this.config.length);\r\n        this.componentKey = Math.random()\r\n            .toString(36)\r\n            .substring(2) + new Date().getTime().toString(36);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.otpForm = new FormGroup({});\r\n        for (let index = 0; index < this.config.length; index++) {\r\n            this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n        }\r\n        this.inputType = this.getInputType();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterViewInit() {\r\n        if (!this.config.disableAutoFocus) {\r\n            /** @type {?} */\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            if (containerItem) {\r\n                containerItem.addEventListener('paste', (/**\r\n                 * @param {?} evt\r\n                 * @return {?}\r\n                 */\r\n                (evt) => this.handlePaste(evt)));\r\n                /** @type {?} */\r\n                const ele = containerItem.getElementsByClassName('otp-input')[0];\r\n                if (ele && ele.focus) {\r\n                    ele.focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} idx\r\n     * @return {?}\r\n     */\r\n    getControlName(idx) {\r\n        return `ctrl_${idx}`;\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifLeftArrow(event) {\r\n        return this.ifKeyCode(event, 37);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifRightArrow(event) {\r\n        return this.ifKeyCode(event, 39);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifBackspaceOrDelete(event) {\r\n        return (event.key === 'Backspace' ||\r\n            event.key === 'Delete' ||\r\n            this.ifKeyCode(event, 8) ||\r\n            this.ifKeyCode(event, 46));\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @param {?} targetCode\r\n     * @return {?}\r\n     */\r\n    ifKeyCode(event, targetCode) {\r\n        /** @type {?} */\r\n        const key = event.keyCode || event.charCode;\r\n        // tslint:disable-next-line: triple-equals\r\n        return key == targetCode ? true : false;\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onKeyDown($event) {\r\n        /** @type {?} */\r\n        var isSpace = this.ifKeyCode($event, 32);\r\n        if (isSpace) { // prevent space\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @param {?} inputIdx\r\n     * @return {?}\r\n     */\r\n    onKeyUp($event, inputIdx) {\r\n        /** @type {?} */\r\n        const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n        /** @type {?} */\r\n        const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n        if (this.ifRightArrow($event)) {\r\n            this.setSelected(nextInputId);\r\n            return;\r\n        }\r\n        if (this.ifLeftArrow($event)) {\r\n            this.setSelected(prevInputId);\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        const isBackspace = this.ifBackspaceOrDelete($event);\r\n        if (isBackspace && !$event.target.value) {\r\n            this.setSelected(prevInputId);\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        if (!$event.target.value) {\r\n            return;\r\n        }\r\n        if (this.ifValidEntry($event)) {\r\n            this.setSelected(nextInputId);\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    appendKey(id) {\r\n        return `${id}_${this.componentKey}`;\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    setSelected(eleId) {\r\n        this.focusTo(eleId);\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele && ele.setSelectionRange) {\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                ele.setSelectionRange(0, 1);\r\n            }), 0);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifValidEntry(event) {\r\n        /** @type {?} */\r\n        const inp = String.fromCharCode(event.keyCode);\r\n        /** @type {?} */\r\n        const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        return (isMobile ||\r\n            /[a-zA-Z0-9-_]/.test(inp) ||\r\n            (this.config.allowKeyCodes &&\r\n                this.config.allowKeyCodes.includes(event.keyCode)) ||\r\n            (event.keyCode >= 96 && event.keyCode <= 105));\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    focusTo(eleId) {\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele) {\r\n            ele.focus();\r\n        }\r\n    }\r\n    // method to set component value\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    setValue(value) {\r\n        if (this.config.allowNumbersOnly && isNaN(value)) {\r\n            return;\r\n        }\r\n        this.otpForm.reset();\r\n        if (!value) {\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n        Array.from(value).forEach((/**\r\n         * @param {?} c\r\n         * @param {?} idx\r\n         * @return {?}\r\n         */\r\n        (c, idx) => {\r\n            if (this.otpForm.get(this.getControlName(idx))) {\r\n                this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n            }\r\n        }));\r\n        /** @type {?} */\r\n        const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n        /** @type {?} */\r\n        var indexOfElementToFocus = value.length < this.config.length ? value.length : (this.config.length - 1);\r\n        /** @type {?} */\r\n        let ele = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n        if (ele && ele.focus) {\r\n            ele.focus();\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    rebuildValue() {\r\n        /** @type {?} */\r\n        let val = '';\r\n        this.keysPipe.transform(this.otpForm.controls).forEach((/**\r\n         * @param {?} k\r\n         * @return {?}\r\n         */\r\n        k => {\r\n            if (this.otpForm.controls[k].value) {\r\n                val += this.otpForm.controls[k].value;\r\n            }\r\n        }));\r\n        this.onInputChange.emit(val);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getInputType() {\r\n        return this.config.isPasswordInput\r\n            ? 'password'\r\n            : this.config.allowNumbersOnly\r\n                ? 'tel'\r\n                : 'text';\r\n    }\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    handlePaste(e) {\r\n        // Get pasted data via clipboard API\r\n        /** @type {?} */\r\n        let clipboardData = e.clipboardData || window['clipboardData'];\r\n        if (clipboardData) {\r\n            /** @type {?} */\r\n            var pastedData = clipboardData.getData('Text');\r\n        }\r\n        // Stop data actually being pasted into div\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (!pastedData) {\r\n            return;\r\n        }\r\n        this.setValue(pastedData);\r\n    }\r\n}\r\nNgOtpInputComponent.decorators = [\r\n    { type: Component, args: [{\r\n                // tslint:disable-next-line: component-selector\r\n                selector: 'ng-otp-input',\r\n                template: \"<div class=\\\"wrapper {{config.containerClass}}\\\" id=\\\"c_{{componentKey}}\\\" *ngIf=\\\"otpForm?.controls\\\"\\r\\n  [ngStyle]=\\\"config.containerStyles\\\">\\r\\n  <input [pattern]=\\\"config.allowNumbersOnly ? '\\\\\\\\d*' : ''\\\" [type]=\\\"inputType\\\" numberOnly [placeholder]=\\\"config?.placeholder || ''\\\"\\r\\n    [disabledNumberOnly]=\\\"!config.allowNumbersOnly\\\" [ngStyle]=\\\"config.inputStyles\\\" maxlength=\\\"1\\\"\\r\\n    class=\\\"otp-input {{config.inputClass}}\\\" autocomplete=\\\"off\\\" *ngFor=\\\"let item of otpForm?.controls | keys;let i=index\\\"\\r\\n    [formControl]=\\\"otpForm.controls[item]\\\" id=\\\"otp_{{i}}_{{componentKey}}\\\" (keydown)=\\\"onKeyDown($event)\\\"\\r\\n    (keyup)=\\\"onKeyUp($event,i)\\\">\\r\\n</div>\",\r\n                styles: [\".otp-input{width:50px;height:50px;border-radius:4px;border:1px solid #c5c5c5;text-align:center;font-size:32px}.wrapper .otp-input:not(:last-child){margin-right:8px}@media screen and (max-width:767px){.otp-input{width:40px;font-size:24px;height:40px}}@media screen and (max-width:420px){.otp-input{width:30px;font-size:18px;height:30px}}\"]\r\n            }] }\r\n];\r\n/** @nocollapse */\r\nNgOtpInputComponent.ctorParameters = () => [\r\n    { type: KeysPipe }\r\n];\r\nNgOtpInputComponent.propDecorators = {\r\n    config: [{ type: Input }],\r\n    onInputChange: [{ type: Output }]\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NumberOnlyDirective {\r\n    /**\r\n     * @param {?} _elRef\r\n     * @param {?} _renderer\r\n     */\r\n    constructor(_elRef, _renderer) {\r\n        this._elRef = _elRef;\r\n        this._renderer = _renderer;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (!this.disabledNumberOnly) {\r\n            this._renderer.setAttribute(this._elRef.nativeElement, 'onkeypress', 'return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 0');\r\n        }\r\n    }\r\n}\r\nNumberOnlyDirective.decorators = [\r\n    { type: Directive, args: [{\r\n                selector: '[numberOnly]'\r\n            },] }\r\n];\r\n/** @nocollapse */\r\nNumberOnlyDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 }\r\n];\r\nNumberOnlyDirective.propDecorators = {\r\n    disabledNumberOnly: [{ type: Input }]\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputModule {\r\n}\r\nNgOtpInputModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                imports: [\r\n                    CommonModule,\r\n                    FormsModule,\r\n                    ReactiveFormsModule\r\n                ],\r\n                declarations: [NgOtpInputComponent, KeysPipe, NumberOnlyDirective],\r\n                exports: [NgOtpInputComponent],\r\n                providers: [KeysPipe]\r\n            },] }\r\n];\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgOtpInputModule, NgOtpInputComponent as ɵa, NumberOnlyDirective as ɵc, KeysPipe as ɵb };\n\n//# sourceMappingURL=ng-otp-input.js.map","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UnloadDirective } from './directive/unload.directive';\nimport { FilterPipe } from './pipe/filter.pipe';\nimport { NumberDirective } from './directive/numbers-only.directive';\nimport { FocusDirective } from './directive/focus.directive';\n\n@NgModule({\n  declarations: [UnloadDirective, FocusDirective, FilterPipe, NumberDirective],\n  imports: [\n    CommonModule\n  ], exports: [UnloadDirective, FocusDirective, FilterPipe, NumberDirective]\n})\nexport class CoreModule { }\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n    selector: '[appFocus]'\n})\nexport class FocusDirective {\n    constructor(private el: ElementRef) {\n    }\n    ngAfterViewInit() {\n        this.el.nativeElement.focus();\n    }\n}\n\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n    selector: 'input[numbersOnly]'\n})\nexport class NumberDirective {\n\n    constructor(private _el: ElementRef) { }\n\n    @HostListener('input', ['$event']) onInputChange(event) {\n        const initalValue = this._el.nativeElement.value;\n        this._el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\n        if (initalValue !== this._el.nativeElement.value) {\n            event.stopPropagation();\n        }\n    }\n\n}","import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appUnload]'\n})\nexport class UnloadDirective {\n\n  constructor() { }\n\n  @HostListener('window:beforeunload', ['$event']) unloadHandler(event: Event) {\n    event.returnValue = false;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\n\nexport class FilterPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n\n      if (!value) return null;\n      if (!args) return value;\n      args = args.toLowerCase();\n      return value.filter(function (item: any) {\n          return JSON.stringify(item).toLowerCase().includes(args);\n      });\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GatewayService } from './gateway.service';\nimport * as environment from '../environments/environment';\n\ninterface OrgAppId {\n  orgId: string;\n  appId: string;\n}\n\ninterface ApiRequest {\n  orgId: string;\n  appId: string;\n  environment: string,\n  loginId: string,\n  apiName: string,\n  apiType: string,\n  version: string,\n  apiData: {},\n  description: string,\n  resourceId: string,\n  resourceType: string\n}\n\ndeclare const APIGateway: any;\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GatewayApisService {\n\n  private apiGateway: any;\n\n  constructor(private gateway: GatewayService,\n    private http: HttpClient) {\n    this.apiGateway = new APIGateway();\n    this.apiGateway.config(this.getConfiguration());\n  }\n\n  private getConfiguration(): any {\n    return {\n      logging: true, // Enable Logging in API GATEWAY\n      serviceWorker: false, // Enable Service Worker\n      activeSWOnLocalHost: false, // Enable Service Worker on LocalHost\n      encryption: true, // Enable Encryption\n      storage: 'localStorage', // Can Configure Storage according to your project,a) sessionStorage b) localStorage c) IndexDB\n      networkDriver: 'FETCH'\n    };\n  }\n\n  public callApi(body, header, url): any {\n    return this.gateway.callApiClientURL(body, header, url)\n  }\n\n  public getOrgAppId(): OrgAppId {\n    const data = environment.environment['envProps'];\n    const obj = {\n      orgId: data['orgId'],\n      appId: data['appId']\n    }\n    return obj;\n  }\n\n  public getApiRequest(): ApiRequest {\n    const data = environment.environment['envProps'];\n    return {\n      orgId: data['orgId'],\n      appId: data['appId'],\n      environment: '',\n      loginId: '',\n      apiName: 'signUp',\n      apiType: 'signUp',\n      version: '',\n      apiData: {},\n      description: '',\n      resourceId: '',\n      resourceType: ''\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\ndeclare const APIGateway: any;\nimport { from } from 'rxjs';\nimport * as environment from '../environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GatewayService {\n    private apiGateway: any;\n    constructor() {\n        this.apiGateway = new APIGateway();\n        this.apiGateway.config(this.getConfiguration());\n    }\n\n    public CallApiClient(body, headers): any {\n        // doPost return the Promise and filtered response\n        return from(this.apiGateway.doPost(environment.environment, body, headers));\n    }\n\n    private getConfiguration() {\n        return {\n            logging: false, // Enable Logging in API GATEWAY\n            serviceWorker: true, // Enable Service Worker\n            activeSWOnLocalHost: false, // Enable Service Worker on LocalHost\n            encryption: true,         // Enable Encryption\n            storage: 'localStorage',  // Can Configure Storage according to your project,a) sessionStorage b) localStorage c) IndexDB\n            networkDriver: 'FETCH'\n        };\n\n    }\n\n    public callApiClientURL(body, headers, url): any {\n        return from(this.apiGateway.doPostByUrl(environment, body, headers, url));\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { GatewayApisService } from '../gateway-apis.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SignInService {\n  authPath = '/USERMANAGEMENT/user/management/';\n  private urls = {\n    signIn: `${this.authPath}signin`,\n    passwordRecovery: `${this.authPath}passwordRecovery`,\n    newPassword: `${this.authPath}reset/password`,\n    verifyEmail: `${this.authPath}checkEmail`,\n    generateOtp: `${this.authPath}generate/otp`\n  };\n\n  private emailIdSource = new BehaviorSubject(null);\n  private emailIdReference = new BehaviorSubject(null);\n  public currentId = this.emailIdSource.asObservable();\n  public currentReference = this.emailIdReference.asObservable();\n  public requestDTO;\n\n  constructor(private http: HttpClient, private gatewayApis: GatewayApisService) {\n    this.requestDTO = this.gatewayApis.getApiRequest();\n  }\n\n  public changeEmailId(id: string): void {\n    this.emailIdSource.next(id)\n  }\n\n  public changeReference(reference: string): void {\n    this.emailIdReference.next(reference);\n  }\n\n  public signInApi(data: any): Observable<any> {\n    this.requestDTO.apiData = {\n      'emailId': data.email,\n      'password': data.password\n    };\n    this.requestDTO.loginId = data.email;\n    console.log('signInApi ', this.requestDTO);\n    return this.gatewayApis.callApi(this.requestDTO, {}, this.urls.signIn)\n  }\n\n  public newPasswordApi(data: any): Observable<any> {\n    this.requestDTO.apiData = data;\n    this.requestDTO.loginId = data.emailId;\n    console.log('newPasswordApi ', this.requestDTO);\n    return this.gatewayApis.callApi(this.requestDTO, {}, this.urls.newPassword)\n  }\n\n  public verifyEmailId(type: string, id: string): Observable<any> {\n    this.requestDTO.apiData =\n      {\n        'type': type,\n        'emailId': id\n      };\n    this.requestDTO.loginId = id;\n    console.log('verifyEmailId ', this.requestDTO);\n    return this.gatewayApis.callApi(this.requestDTO, {}, this.urls.verifyEmail)\n  }\n\n  public generateOtp(email: string, type: string): Observable<any> {\n    this.requestDTO.apiData =\n      {\n        'emailId': email,\n        'type': type\n      };\n    this.requestDTO.loginId = email;\n    console.log('generateOtp ', this.requestDTO);\n    return this.gatewayApis.callApi(this.requestDTO, {}, this.urls.generateOtp)\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GatewayApisService } from '../gateway-apis.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SignUpService {\n  authPath = '/USERMANAGEMENT/user/management/';\n  private urls = {\n    signup: `${this.authPath}signup`,\n    confirmEmail: `${this.authPath}verify/email`,\n  };\n  public requestDTO: any;\n\n  constructor(private http: HttpClient, private gatewayApis: GatewayApisService) {\n    this.requestDTO = this.gatewayApis.getApiRequest();\n  }\n\n  public signupApi(data: any): Observable<any> {\n    this.requestDTO.apiData =\n      {\n        'emailId': data.email,\n        'userName': data.name,\n        'mobileNo': data.contactDetails['mobileNo'],\n        'password': data.password,\n        'country': data.contactDetails['name'],\n        'countryCode': data.contactDetails['dialCode'],\n        'userDetails': ''\n      }\n    this.requestDTO.loginId = data.email;\n    console.log('signupApi ', this.requestDTO);\n    return this.gatewayApis.callApi(this.requestDTO, {}, this.urls.signup)\n  }\n\n  public confirmEmailApi(data: any): Observable<any> {\n    this.requestDTO.apiData = data;\n    this.requestDTO.loginId = data.emailId;\n    console.log('confirmEmailApi ', this.requestDTO);\n    return this.gatewayApis.callApi(this.requestDTO, {}, this.urls.confirmEmail)\n  }\n\n}\n"],"sourceRoot":"webpack:///"}